import os
import sys
from subprocess import run
from time import sleep

from ppadb.client import Client as adbClient

#!#!#!
# This uses adb to unlock the bootloader
# and root an android device via usb
#!#!#!

# start the adb client
adb = adbClient("127.0.0.1", 5037)

# gather devices
clients = adb.devices()
try:
    client = clients[0]
except IndexError:
    print("No devices found")
    sys.exit()

# reboot device to bootloader
print(f"Found {client} rebooting device to bootloader")
client.shell("reboot bootloader")

# wait for the device to reboot to bootloader
sleep(4.5)

# check connections
fastboot_check = run(["fastboot", "devices"], capture_output=True)

# send unlock command
print("Attempting to unlock")
recovers = []


def unlockAndBoot():
    if "fastboot" in fastboot_check.stdout.decode():
        run(['fastboot', "flashing", "unlock"])
        # build a recovery list
        for x in os.listdir("webServer/assets/"):
            if ".img" in x:
                recovers.append(x)

        run(["clear"])
        for i in recovers:
            print(f"{recovers.index(i)}: {i}")
        recovery = recovers[int(input("enter the index of the recovery to try and boot: "))]
        run(['fastboot', "boot", f"webServer/assets/{recovery}"])



def root():
    run(["clear"])
    pak = []
    for x in os.listdir("webServer/assets/"):
        if ".zip" in x:
            pak.append(x)

    for x in pak:
        print(f"{pak.index(x)}: {x}")
    run(['adb', "sideload", f"webServer/assets/{pak[int(input('enter the index of zip to send: '))]}"])
    pass


unlockAndBoot()
root()

